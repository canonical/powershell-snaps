name: powershell
icon: assets/icon.png
adopt-info: powershell
summary: PowerShell for every system!
description: |
  PowerShell is an automation and configuration management platform.
  It consists of a cross-platform (Windows, Linux, and macOS) command-line shell and associated scripting language.
  See https://docs.microsoft.com/powershell/scripting/powershell-support-lifecycle for support details.

base: core22
grade: stable
confinement: classic

package-repositories:
 - type: apt
   ppa: dotnet/backports
   priority: always

architectures:
  - build-on: [amd64]
    build-for: [amd64]
  - build-on: [arm64]
    build-for: [arm64]
  - build-on: [ppc64el]
    build-for: [ppc64el]
  - build-on: [s390x]
    build-for: [s390x]

parts:
  launcher:
    plugin: dump
    source: .
    organize:
      scripts/powershell-wrapper: bin/powershell-wrapper
      buildinfo-url: meta/buildinfo-url
    prime:
      - bin/powershell-wrapper
      - meta/buildinfo-url

  powershell:
    after: [launcher]
    plugin: nil
    source: https://github.com/powershell/powershell.git
    source-type: git
    build-attributes:
      - enable-patchelf
    build-packages:
      - dotnet-sdk-9.0
      - git
      - jq
      - libicu70
      - patchelf
    build-snaps:
      - powershell
    stage-packages:
      - libicu70
      - liblttng-ust1
      - libssl-dev
      - zlib1g
    
    override-build: |
      craftctl default
      /usr/bin/dotnet --info

      if [ "${CRAFT_ARCH_BUILD_FOR}" = "amd64" ]; then
        target_rid=linux-x64
      elif [ "${CRAFT_ARCH_BUILD_FOR}" = "arm64" ]; then
        target_rid=linux-arm64
      elif [ "${CRAFT_ARCH_BUILD_FOR}" = "ppc64el" ]; then
        target_rid=linux-ppc64le
      elif [ "${CRAFT_ARCH_BUILD_FOR}" = "s390x" ]; then
        target_rid=linux-s390x
      else
        echo "Unknown architecture (${CRAFT_ARCH_BUILD_FOR})"
        exit 1
      fi

      latest_release_url=$(cat ${CRAFT_STAGE}/meta/buildinfo-url)
      latest_release_tag=$(curl --silent --location ${latest_release_url} | jq --raw-output '.ReleaseTag')
      latest_version=$(echo $latest_release_tag | sed 's/^v//')

      git checkout "$latest_release_tag"
      craftctl set version="$latest_version"

      target_framework=$(awk -F'[<>]' '/<TargetFramework>/{print $3}' PowerShell.Common.props)
      latest_dotnet_sdk_version=$(/usr/bin/dotnet --list-sdks | cut -d ' ' -f 1 | tail -n 1)
      jq '.sdk.version = "'$latest_dotnet_sdk_version'"' ${CRAFT_PART_BUILD}/global.json > tmp.json
      mv tmp.json ${CRAFT_PART_BUILD}/global.json

      /snap/bin/powershell -NonInteractive -Command \
        "Import-Module ${CRAFT_PART_BUILD}/build.psm1; Start-PSBuild -UseNuGetOrg -Runtime ${target_rid} \
        -Configuration Release -PSOptionsPath ${CRAFT_PART_BUILD}/psoptions.json"

      mkdir --parents ${CRAFT_PART_INSTALL}/opt/powershell
      cp -RLp ${CRAFT_PART_BUILD}/src/powershell-unix/bin/Release/${target_framework}/${target_rid}/publish/* \
        ${CRAFT_PART_INSTALL}/opt/powershell
      cp -RLp ${CRAFT_PART_BUILD}/psoptions.json ${CRAFT_PART_INSTALL}/opt/powershell

      patchelf --force-rpath --set-rpath \$ORIGIN/../../usr/lib/x86_64-linux-gnu:\$ORIGIN/../../lib/x86_64-linux-gnu \
          ${CRAFT_PART_INSTALL}/opt/powershell/pwsh

apps:
  powershell:
    command: bin/powershell-wrapper
    environment:
      POWERSHELL_DISTRIBUTION_CHANNEL: PSSnap
      CLR_ICU_VERSION_OVERRIDE: 70.1
