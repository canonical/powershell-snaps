name: powershell
icon: assets/icon-stable.png
adopt-info: powershell
summary: PowerShell for every system!
description: |
  PowerShell is an automation and configuration management platform.
  It consists of a cross-platform (Windows, Linux, and macOS) command-line shell and associated scripting language.
  See https://docs.microsoft.com/powershell/scripting/powershell-support-lifecycle for support details.

base: core22
grade: devel
confinement: classic

package-repositories:
 - type: apt
   ppa: dotnet/backports
   priority: always

architectures:
  - build-on: [amd64]
    build-for: [amd64]
  - build-on: [arm64]
    build-for: [arm64]
  - build-on: [ppc64el]
    build-for: [ppc64el]
  - build-on: [s390x]
    build-for: [s390x]

parts:
  launcher:
    plugin: dump
    source: .
    organize:
      launcher/powershell-wrapper: bin/powershell-wrapper
      buildinfo-url: meta/buildinfo-url
    prime:
      - bin/powershell-wrapper
      - meta/buildinfo-url

  libpsl-native:
    after: [launcher]
    plugin: nil
    source: https://github.com/powershell/powershell-native.git
    source-type: git
    build-packages:
      - cmake
      - git

    override-build: |
      cd ${CRAFT_PART_BUILD}/src/libpsl-native
      cmake -DCMAKE_BUILD_TYPE=Release .
      make -j$(nproc)

      mkdir --parents ${CRAFT_PART_INSTALL}/opt/powershell
      cp -Lp ${CRAFT_PART_BUILD}/src/powershell-unix/libpsl-native.so \
        ${CRAFT_PART_INSTALL}/opt/powershell

  powershell:
    after: [launcher]
    plugin: nil
    source: https://github.com/powershell/powershell.git
    source-type: git
    build-attributes:
      - enable-patchelf
    build-packages:
      - dotnet-sdk-9.0
      - dotnet-sdk-9.0-source-built-artifacts
      - git
      - jq
      - libicu70
    stage-packages:
      - libicu70
      - liblttng-ust1
      - zlib1g
    
    override-build: |
      craftctl default
      /usr/bin/dotnet --info

      if [ "${CRAFT_ARCH_BUILD_FOR}" = "amd64" ]; then
        target_rid=ubuntu.22.04-x64
      elif [ "${CRAFT_ARCH_BUILD_FOR}" = "arm64" ]; then
        target_rid=ubuntu.22.04-arm64
      elif [ "${CRAFT_ARCH_BUILD_FOR}" = "ppc64el" ]; then
        target_rid=ubuntu.22.04-ppc64le
      elif [ "${CRAFT_ARCH_BUILD_FOR}" = "s390x" ]; then
        target_rid=ubuntu.22.04-s390x
      else
        echo "Unknown architecture (${CRAFT_ARCH_BUILD_FOR})"
        exit 1
      fi

      latest_release_url=$(cat ${CRAFT_STAGE}/meta/buildinfo-url)
      latest_release_tag=$(curl --silent --location ${latest_release_url} | jq --raw-output '.ReleaseTag')
      latest_version=$(echo $latest_release_tag | sed 's/^v//')

      git checkout "$latest_release_tag"
      craftctl set version="$latest_version"

      target_framework=$(awk -F'[<>]' '/<TargetFramework>/{print $3}' PowerShell.Common.props)
      latest_dotnet_sdk_version=$(/usr/bin/dotnet --list-sdks | cut -d ' ' -f 1 | tail -n 1)
      jq '.sdk.version = "'$latest_dotnet_sdk_version'"' ${CRAFT_PART_BUILD}/global.json > tmp.json
      mv tmp.json ${CRAFT_PART_BUILD}/global.json

      pushd ${CRAFT_PART_BUILD}/src/ResGen
      /usr/bin/dotnet restore
      /usr/bin/dotnet run
      popd

      pushd ${CRAFT_PART_BUILD}/src
      targetFile="Microsoft.PowerShell.SDK/obj/Microsoft.PowerShell.SDK.csproj.TypeCatalog.targets"
      mkdir --parents Microsoft.PowerShell.SDK/obj
      cat > $targetFile <<-"EOF"
      <Project>
          <Target Name="_GetDependencies"
                  DependsOnTargets="ResolveAssemblyReferencesDesignTime">
              <ItemGroup>
                  <_RefAssemblyPath Include="%(_ReferencesFromRAR.HintPath)%3B"  Condition=" '%(_ReferencesFromRAR.NuGetPackageId)' != 'Microsoft.Management.Infrastructure' "/>
              </ItemGroup>
              <WriteLinesToFile File="$(_DependencyFile)" Lines="@(_RefAssemblyPath)" Overwrite="true" />
          </Target>
      </Project>
      EOF
      /usr/bin/dotnet msbuild Microsoft.PowerShell.SDK/Microsoft.PowerShell.SDK.csproj /t:_GetDependencies "/property:DesignTimeBuild=true;_DependencyFile=$(pwd)/TypeCatalogGen/powershell.inc" /nologo
      popd

      pushd ${CRAFT_PART_BUILD}/src/TypeCatalogGen
      /usr/bin/dotnet restore
      /usr/bin/dotnet run ../System.Management.Automation/CoreCLR/CorePsTypeCatalog.cs powershell.inc
      popd

      pushd ${CRAFT_PART_BUILD}/src/powershell-unix
      mkdir nugets
      cd nugets
      tar xzf /usr/lib/dotnet/source-built-artifacts/Private.SourceBuilt.Artifacts.*.tar.gz
      cd ..
      /usr/bin/dotnet restore -s file://$(pwd)/nugets
      /usr/bin/dotnet build -c Release -r ${target_rid} --self-contained --source file://$(pwd)/nugets
      popd

      mkdir --parents ${CRAFT_PART_INSTALL}/opt/powershell
      cp -RLp ${CRAFT_PART_BUILD}/src/powershell-unix/bin/Release/${target_framework}/${target_rid}/* \
        ${CRAFT_PART_INSTALL}/opt/powershell

apps:
  powershell:
    command: bin/powershell-wrapper
    environment:
      LD_LIBRARY_PATH: $SNAP/usr/lib/x86_64-linux-gnu:$SNAP/lib/x86_64-linux-gnu
      POWERSHELL_DISTRIBUTION_CHANNEL: PSSnap
      CLR_ICU_VERSION_OVERRIDE: 70.1
